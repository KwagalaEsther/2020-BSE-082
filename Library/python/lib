import cv2
from pyzbar.pyzbar import decode

class QRScanner:
    def __init__(self):
        self.camera = cv2.VideoCapture(0)

    def scan_qr_code(self):
        while True:
            # Capture a frame from the camera
            _, frame = self.camera.read()

            # Convert the frame to grayscale
            gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

            # Use PyZbar to decode QR codes
            decoded_objects = decode(gray)

            for obj in decoded_objects:
                # Extract the QR code data
                data = obj.data.decode('utf-8')

                # Draw a rectangle around the QR code
                points = obj.polygon
                if len(points) == 4:
                    hull = cv2.convexHull(points)
                    cv2.polylines(frame, [hull], True, (0, 255, 0), 2)

                # Print the QR code data
                print(f"QR Code Data: {data}")

            # Display the frame with highlighted QR code
            cv2.imshow("QR Code Scanner", frame)

            # Check for the 'q' key to exit the loop
            if cv2.waitKey(1) & 0xFF == ord('q'):
                break

        # Release the camera and close the window
        self.camera.release()
        cv2.destroyAllWindows()

if __name__ == "__main__":
    qr_scanner = QRScanner()
    qr_scanner.scan_qr_code()
